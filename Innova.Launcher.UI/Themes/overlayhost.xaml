<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:assist="clr-namespace:Innova.Launcher.UI"
                    xmlns:local="clr-namespace:Innova.Launcher.UI.Themes"
                    xmlns:controls="clr-namespace:Innova.Launcher.UI.Controls"
                    xmlns:overlay="clr-namespace:Innova.Launcher.UI.Controls.Overlay"
                    xmlns:converters="clr-namespace:Innova.Launcher.UI.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Innova.Launcher.UI;component/Styles/Fonts.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/Innova.Launcher.UI;component/Styles/Icons.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/Innova.Launcher.UI;component/Styles/Colors.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/Innova.Launcher.UI;component/Styles/Controls.xaml"/>
    <ResourceDictionary>
      <converters:MathConverter x:Key="MathConverter"/>
    </ResourceDictionary>
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="InnovaOverlayHostPopup" TargetType="{x:Type controls:OverlayPopup}">
    <Setter Property="Popup.StaysOpen" Value="True"/>
    <Setter Property="Popup.AllowsTransparency" Value="False"/>
    <Setter Property="Popup.PopupAnimation" Value="None"/>
  </Style>
  <Style TargetType="{x:Type overlay:OverlayHost}">
    <Setter Property="overlay:OverlayHost.OverlayMargin" Value="22"/>
    <Setter Property="overlay:OverlayHost.PopupStyle" Value="{StaticResource InnovaOverlayHostPopup}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type overlay:OverlayHost}">
          <Grid x:Name="OverlayHostRoot" Focusable="False">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PopupStates">
                <VisualState x:Name="Open">
                  <Storyboard>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
                      <DiscreteBooleanKeyFrame Value="True" KeyTime="0"/>
                    </BooleanAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="PART_ContentCoverGrid" Storyboard.TargetProperty="Opacity" Duration="0"
                                     To="1"/>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Title" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Closed">
                  <Storyboard>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
                      <DiscreteBooleanKeyFrame Value="False" KeyTime="0"/>
                    </BooleanAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" SharedSizeGroup="Title"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <controls:OverlayPopup x:Name="PART_Popup" Placement="Custom"
                                     CustomPopupPlacementCallback="{x:Static overlay:OverlayHost.OverlayPopupPlacementCallback}"
                                     Panel.ZIndex="10" assist:PopupAllowKeyboardInput.IsEnabled="True"
                                     Style="{TemplateBinding overlay:OverlayHost.PopupStyle}"
                                     PlacementTarget="{Binding ElementName=PART_ContentCoverGrid, Mode=OneWay}"
                                     Width="{Binding ElementName=PART_ContentCoverGrid, Path=ActualWidth}">
                <FrameworkElement.Height>
                  <MultiBinding Converter="{StaticResource MathConverter}">
                    <Binding ElementName="PART_ContentCoverGrid" Path="ActualHeight"/>
                    <Binding ElementName="PART_Title" Path="ActualHeight"/>
                  </MultiBinding>
                </FrameworkElement.Height>
                <UIElement.InputBindings>
                  <KeyBinding Key="Esc" Command="{Binding overlay:OverlayHost.CloseOverlayCommand}"/>
                </UIElement.InputBindings>
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition SharedSizeGroup="Title" Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid Name="PopupContentControl" Row="1" Background="{DynamicResource BackgroundBrush}">
                    <ContentControl x:Name="PART_PopupContentElement" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                    TextElement.Foreground="{DynamicResource TextActiveBrush}" TextElement.FontSize="13"
                                    TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Auto"
                                    FocusManager.IsFocusScope="False" Foreground="{DynamicResource BackgroundBrush}"
                                    FontFamily="{StaticResource AppFont}" Focusable="True" IsTabStop="False"
                                    RenderTransformOrigin=".5,.5" Content="{TemplateBinding overlay:OverlayHost.OverlayContent}"
                                    ContentTemplate="{TemplateBinding overlay:OverlayHost.OverlayContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding overlay:OverlayHost.OverlayContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding overlay:OverlayHost.OverlayContentStringFormat}"/>
                  </Grid>
                  <Grid Row="2">
                    <Grid Background="{DynamicResource OverlayBrush}" Opacity="0.95"/>
                    <Button Style="{StaticResource IconButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Focusable="False" Command="{x:Static overlay:OverlayHost.CloseOverlayCommand}" Padding="27">
                      <Path Data="{DynamicResource IconClose}" Width="20" Height="20" Stretch="Uniform"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                    </Button>
                  </Grid>
                </Grid>
              </controls:OverlayPopup>
              <AdornerDecorator Grid.RowSpan="2">
                <ContentPresenter x:Name="ContentPresenter" Opacity="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"/>
              </AdornerDecorator>
              <Grid x:Name="PART_ContentCoverGrid" RowSpan="2"
                    Margin="{TemplateBinding overlay:OverlayHost.OverlayMargin}" Opacity="0"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False"
                    Focusable="False" Background="{x:Null}"/>
              <ContentControl x:Name="PART_Title" Grid.Row="0" Visibility="Hidden"
                              Content="{TemplateBinding overlay:OverlayHost.TitleContent}" HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Stretch"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="overlay:OverlayHost.ControlOverlaps" Value="False">
              <Setter TargetName="PART_PopupContentElement" Property="FrameworkElement.Margin" Value="0 0 0 74"/>
            </Trigger>
            <Trigger Property="overlay:OverlayHost.IsOpen" Value="True">
              <Setter TargetName="PART_ContentCoverGrid" Value="{DynamicResource OverlayBrush}"
                      Property="Panel.Background"/>
              <Setter TargetName="PART_ContentCoverGrid" Property="UIElement.IsHitTestVisible" Value="True"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>