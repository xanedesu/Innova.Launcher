<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Innova.Launcher.UI.Controls"
                    xmlns:local="clr-namespace:Innova.Launcher.UI">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Innova.Launcher.UI;component/Styles/Controls.Buttons.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="ButtonTextBoxStyle" TargetType="{x:Type controls:ButtonTextBox}">
    <Setter Property="Control.Foreground"
            Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="TextBoxBase.CaretBrush" Value="{DynamicResource TextActiveBrush}"/>
    <Setter Property="Control.FontSize" Value="13px"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:ButtonTextBox}">
          <Grid>
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
              <Grid Margin="{TemplateBinding Control.Padding}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Foreground="{TemplateBinding Control.Foreground}" Focusable="False"
                           HorizontalAlignment="Left" FontSize="13px" VerticalAlignment="Center" Margin="0 4 0 0"
                           Text="{Binding Path=(local:CaptionAssist.Caption), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}"/>
                <Grid Row="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"
                                HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                HorizontalAlignment="Stretch"
                                VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                UseLayoutRounding="{TemplateBinding FrameworkElement.UseLayoutRounding}"/>
                  <Button Grid.Column="1" Margin="10 0 0 0" Style="{StaticResource InnovaButtonStyle}"
                          Command="{TemplateBinding controls:ButtonTextBox.ButtonCommand}"
                          Content="{TemplateBinding controls:ButtonTextBox.ButtonContent}" FontSize="11px" Width="85"
                          Height="25"/>
                </Grid>
                <controls:Underline x:Name="Underline" Grid.Row="2" Margin="0 5 0 0"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TextBoxBase.IsReadOnly" Value="False"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="True"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="Underline" Property="controls:Underline.IsActive" Value="True"/>
              </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="Validation.HasError" Value="true">
              <Setter TargetName="Underline" Property="controls:Underline.IsError" Value="True"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type controls:ButtonTextBox}" BasedOn="{StaticResource ButtonTextBoxStyle}"/>
</ResourceDictionary>