<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Innova.Launcher.UI;component/Styles/Colors.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <CornerRadius x:Key="BorderRadius">2</CornerRadius>
  <Style x:Key="InnovaProgressBar" TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Background" Value="{DynamicResource BackgroundBrush}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource ProgressBarBrush}"/>
    <Setter Property="Control.IsTabStop" Value="False"/>
    <Setter Property="RangeBase.Maximum" Value="100"/>
    <Setter Property="FrameworkElement.MinHeight" Value="2"/>
    <Setter Property="FrameworkElement.MinWidth" Value="10"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="FrameworkElement.UseLayoutRounding" Value="True"/>
    <Setter Property="FrameworkElement.Height" Value="2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="Root">
            <Border x:Name="PART_Track" CornerRadius="{StaticResource BorderRadius}"
                    Background="{TemplateBinding Control.Background}" BorderThickness="0"/>
            <Grid x:Name="ProgressBarRootGrid">
              <Grid x:Name="IndeterminateRoot">
                <Border x:Name="IndeterminateSolidFill" CornerRadius="{StaticResource BorderRadius}" Margin="-1"
                        BorderThickness="0" Opacity="1" RenderTransformOrigin="0.5,0.5"/>
                <Border x:Name="IndeterminateGradientFill" CornerRadius="{StaticResource BorderRadius}" BorderThickness="0"
                        Opacity="1">
                  <Border.Background>
                    <LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="10,0">
                      <Brush.Transform>
                        <TransformGroup>
                          <TranslateTransform x:Name="xTransform" X="0"/>
                          <SkewTransform AngleX="-25"/>
                        </TransformGroup>
                      </Brush.Transform>
                      <GradientStop Offset="0" Color="{DynamicResource ProgressIndeterminateColor1}"/>
                      <GradientStop Offset="0.1" Color="{DynamicResource ProgressIndeterminateColor1}"/>
                      <GradientStop Offset="0.11" Color="{DynamicResource ProgressIndeterminateColor2}"/>
                      <GradientStop Offset="0.65" Color="{DynamicResource ProgressIndeterminateColor3}"/>
                      <GradientStop Offset="0.651" Color="{DynamicResource ProgressIndeterminateColor4}"/>
                      <GradientStop Offset="1" Color="{DynamicResource ProgressIndeterminateColor4}"/>
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
              </Grid>
              <Grid x:Name="DeterminateRoot" Margin="0">
                <Border x:Name="PART_Indicator" Margin="0" BorderThickness="0" HorizontalAlignment="Left"
                        CornerRadius="{StaticResource BorderRadius}">
                  <Grid>
                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Background="{DynamicResource ProgressBarBrush}"/>
                    <Border HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="13">
                      <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                          <GradientStop Offset="0" Color="Transparent"/>
                          <GradientStop Offset="1" Color="{StaticResource HighlightedProgressBarColor}"/>
                        </LinearGradientBrush>
                      </Border.Background>
                      <UIElement.Effect>
                        <DropShadowEffect Direction="180" BlurRadius="8" Color="{StaticResource HighlightedProgressBarColor}"
                                          RenderingBias="Performance" ShadowDepth="1" Opacity="1"/>
                      </UIElement.Effect>
                    </Border>
                  </Grid>
                </Border>
              </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Duration="00:00:00">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xTransform" Storyboard.TargetProperty="X">
                      <SplineDoubleKeyFrame KeyTime="0" Value="20"/>
                      <SplineDoubleKeyFrame KeyTime="00:00:1.5" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Duration="00:00:00">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Duration="00:00:00">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <ObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xTransform" Storyboard.TargetProperty="X">
                      <SplineDoubleKeyFrame KeyTime="0" Value="20"/>
                      <SplineDoubleKeyFrame KeyTime="00:00:1.5" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="Root" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
              <Setter TargetName="DeterminateRoot" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="IndeterminateRoot" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>