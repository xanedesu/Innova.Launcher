<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OptionMarkFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="InnovaCheckBox" TargetType="{x:Type CheckBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="{DynamicResource LinkDefaultBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBrush}"/>
    <Setter Property="Control.FontSize" Value="13px"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}"/>
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Viewbox Width="18" Height="18" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                     FlowDirection="LeftToRight">
              <Canvas Width="24" Height="24">
                <Path x:Name="Graphic"
                      Data="M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 M 19,5 L 19,19 5,19 5,5 19,5 Z"
                      Fill="{TemplateBinding Control.BorderBrush}"/>
              </Canvas>
            </Viewbox>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="true">
              <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
              <Setter Property="Control.Padding" Value="4,2,0,0"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsEnabled" Value="False"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource ButtonDisableBrush}" Property="Control.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsEnabled" Value="False"/>
                <Condition Property="ToggleButton.IsChecked" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Graphic" Property="Path.Data"
                      Value="M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 Z"/>
              <Setter Value="{DynamicResource ButtonDisableBrush}" Property="Control.BorderBrush"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{DynamicResource TextActiveBrush}" Property="Control.BorderBrush"/>
              <Setter Value="{DynamicResource ButtonHoverBrush}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{DynamicResource ButtonPressedBrush}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Graphic" Property="Path.Data"
                      Value="M 10,17 L 5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 Z"/>
              <Setter TargetName="Graphic"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                      Property="Shape.Fill"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
              <Setter TargetName="Graphic" Property="Path.Data"
                      Value="M 10,17 L 5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M 19,3 L 5,3 C 3.89,3 3,3.89 3,5 L 3,19 A 2,2 0 0 0 5,21 L 19,21 A 2,2 0 0 0 21,19 L 21,5 C 21,3.89 20.1,3 19,3 Z"/>
              <Setter TargetName="Graphic" Property="UIElement.Opacity" Value="0.56"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
              <Setter TargetName="Graphic" Value="{DynamicResource ErrorBrush}" Property="Shape.Fill"/>
              <Setter TargetName="contentPresenter" Value="{DynamicResource ErrorBrush}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>