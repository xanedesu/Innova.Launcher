<UserControl x:Class="Innova.Launcher.Views.PushNotificationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:Innova.Launcher.UI.Converters;assembly=Innova.Launcher.UI"
             xmlns:svg="clr-namespace:SVGImage.SVG;assembly=DotNetProjects.SVGImage"
             xmlns:controls="clr-namespace:Innova.Launcher.UI.Controls;assembly=Innova.Launcher.UI"
             RenderTransformOrigin="0,1">
  <UIElement.RenderTransform>
    <TranslateTransform X="0" Y="-300"/>
  </UIElement.RenderTransform>
  <FrameworkElement.Resources>
    <converters:CustomBooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"/>
  </FrameworkElement.Resources>
  <FrameworkElement.Triggers>
    <EventTrigger RoutedEvent="UserControl.Loaded">
      <BeginStoryboard>
        <Storyboard>
          <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" From="300" To="0"
                           Duration="0:0:0.3"/>
        </Storyboard>
      </BeginStoryboard>
      <BeginStoryboard x:Name="CloseStoryboard">
        <Storyboard Completed="CloseStoryboardCompleted">
          <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <LinearDoubleKeyFrame KeyTime="0" Value="1"/>
            <LinearDoubleKeyFrame KeyTime="0:0:10" Value="1"/>
            <LinearDoubleKeyFrame KeyTime="0:0:11" Value="0"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </BeginStoryboard>
    </EventTrigger>
    <EventTrigger RoutedEvent="UserControl.MouseEnter">
      <SeekStoryboard BeginStoryboardName="CloseStoryboard" Offset="0" Origin="BeginTime"/>
      <PauseStoryboard BeginStoryboardName="CloseStoryboard"/>
    </EventTrigger>
    <EventTrigger RoutedEvent="UserControl.MouseLeave">
      <ResumeStoryboard BeginStoryboardName="CloseStoryboard"/>
    </EventTrigger>
  </FrameworkElement.Triggers>
  <Border CornerRadius="4" Background="{DynamicResource NotificationBackgroundBrush}" BorderThickness="1"
          BorderBrush="{DynamicResource NotificationOuterBorderBrush}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid Column="0" Margin="20">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Column="0" Height="60" Width="60" VerticalAlignment="Top" HorizontalAlignment="Left">
          <svg:SVGImage FileSource="{Binding SVGImageUrl}"/>
          <Image Source="{Binding ImageUrl}"/>
        </Grid>
        <Grid Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="15 0 0 0">
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <TextBlock Grid.Row="0" FontSize="11" LineHeight="18" TextWrapping="Wrap" Width="210" MaxHeight="200"
                     HorizontalAlignment="Stretch" TextOptions.TextFormattingMode="Ideal" TextTrimming="WordEllipsis"
                     Text="{Binding Message}"/>
          <StackPanel Grid.IsSharedSizeScope="True" Grid.Row="1" Orientation="Horizontal" Margin="0 20 0 0"
                      Visibility="{Binding HasLinks, Converter={StaticResource BooleanToVisibilityConverter}}">
            <controls:UniformVisiblePanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RowSpacing="10">
              <Button x:Name="PrimaryButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                      Style="{StaticResource AccentInnovaButtonStyle}" Height="Auto" Padding="15 5 15 6" FontSize="11"
                      Command="{Binding GoToPrimaryLinkCommand}"
                      Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock TextWrapping="Wrap" TextTrimming="WordEllipsis" TextAlignment="Center" FontSize="11"
                           TextOptions.TextFormattingMode="Ideal" Text="{Binding PrimaryLink.Name}"/>
              </Button>
              <Button x:Name="SecondaryButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                      Style="{StaticResource InnovaButtonStyle}" Height="Auto" Margin="0" Padding="15 5 15 6"
                      TextOptions.TextFormattingMode="Ideal" FontSize="11" Command="{Binding GoToSecondaryLinkCommand}"
                      Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock TextWrapping="Wrap" TextTrimming="WordEllipsis" TextAlignment="Center" FontSize="11"
                           TextOptions.TextFormattingMode="Ideal" Text="{Binding SecondaryLink.Name}"/>
              </Button>
            </controls:UniformVisiblePanel>
          </StackPanel>
        </Grid>
      </Grid>
      <Border Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="1"
              Background="{DynamicResource NotificationBorderBrush}"/>
      <Button x:Name="CloseButton" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
              Style="{DynamicResource IconButtonStyle}" Command="{Binding CloseCommand}">
        <Path Data="{DynamicResource IconClose}" Margin="25" Width="12" Height="12" HorizontalAlignment="Center"
              VerticalAlignment="Center" Stretch="Uniform"
              Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
      </Button>
    </Grid>
  </Border>
</UserControl>