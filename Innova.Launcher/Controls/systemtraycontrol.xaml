<tb:TaskbarIcon x:Class="Innova.Launcher.Views.SystemTrayControl"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:local="clr-namespace:Innova.Launcher.Views"
                xmlns:tb="http://www.hardcodet.net/taskbar"
                xmlns:launcher="clr-namespace:Innova.Launcher"
                xmlns:viewmodels="clr-namespace:Innova.Launcher.ViewModels"
                xmlns:converters="clr-namespace:Innova.Launcher.Converters"
                xmlns:converters1="clr-namespace:Innova.Launcher.UI.Converters;assembly=Innova.Launcher.UI"
                xmlns:services="clr-namespace:Innova.Launcher.Shared.Localization.Services;assembly=Innova.Launcher.Shared.Localization"
                xmlns:lex="http://wpflocalizeextension.codeplex.com"
                x:Name="Icon" Focusable="True"
                IconSource="pack://application:,,,/Innova.Launcher;component/4game.ico"
                lex:LocalizeDictionary.DesignCulture="ru" ToolTipText="{Binding TooltipText}"
                LeftClickCommand="{Binding RiseMainWindowCommand}"
                DoubleClickCommand="{Binding RiseOrHideMainWindowCommand}">
  <services:ResourceLocalizationProvider.DesignProvider>
    <services:ResourceLocalizationProvider DictionaryType="{x:Type launcher:App}"/>
  </services:ResourceLocalizationProvider.DesignProvider>
  <FrameworkElement.ContextMenu>
    <ContextMenu>
      <FrameworkElement.Resources>
        <converters1:CustomBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <CollectionViewSource x:Key="games" Source="{Binding Games}"/>
        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
          <Style.Triggers>
            <DataTrigger Value="{x:Type viewmodels:GameTrayViewModel}" Binding="{Binding Type}">
              <Setter Property="MenuItem.Command" Value="{Binding OpenCommand}"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </FrameworkElement.Resources>
      <ItemsControl.ItemsSource>
        <CompositeCollection>
          <MenuItem Header="4game" Command="{Binding OpenForgameCommand}"/>
          <Separator/>
          <CollectionContainer Collection="{Binding Source={StaticResource games}}"/>
          <Separator Visibility="{Binding NoGames, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
          <MenuItem Header="{lex:Loc Key=SystemTray.Exit}" Command="{Binding ExitCommand}"/>
        </CompositeCollection>
      </ItemsControl.ItemsSource>
      <ItemsControl.ItemTemplate>
        <DataTemplate DataType="{x:Type viewmodels:GameTrayViewModel}">
          <Grid>
            <TextBlock>
              <FrameworkElement.Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Style.Triggers>
                    <DataTrigger Value="{x:Static viewmodels:GameTrayState.InProgress}" Binding="{Binding State}">
                      <Setter Property="TextBlock.Text">
                        <Setter.Value>
                          <MultiBinding StringFormat="â†“ {0} ({1:0.##}%)">
                            <Binding Path="Name"/>
                            <Binding Path="Progress"/>
                          </MultiBinding>
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                    <DataTrigger Value="{x:Static viewmodels:GameTrayState.Installed}" Binding="{Binding State}">
                      <Setter Property="TextBlock.Text" Value="{Binding Name}"/>
                    </DataTrigger>
                    <DataTrigger Value="{x:Static viewmodels:GameTrayState.Paused}" Binding="{Binding State}">
                      <Setter Property="TextBlock.Text">
                        <Setter.Value>
                          <MultiBinding StringFormat="|| {0} ({1:0.##}%)">
                            <Binding Path="Name"/>
                            <Binding Path="Progress"/>
                          </MultiBinding>
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </TextBlock>
          </Grid>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ContextMenu>
  </FrameworkElement.ContextMenu>
</tb:TaskbarIcon>